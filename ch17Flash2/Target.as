// Fig. 17.5: Target.as// Move target, set direction and speed, // and keep track of number of blocks hit.package{   // import relevant classes   import flash.display.MovieClip;   import flash.events.TimerEvent;   import flash.utils.Timer;      public class Target extends MovieClip   {      var speed; // speed of Target      var upDown; // direction of Target      var hitCounter; // number of times Target has been hit            // timer runs indefinitely every 33 ms      var moveTargetTimer : Timer = new Timer ( 33, 0 );         // register function moveTarget as moveTargetTimerâ€™s      // event handler, start timer      public function Target() : void      {         moveTargetTimer.addEventListener (             TimerEvent.TIMER, moveTarget );         moveTargetTimer.start(); // start timer      } // end Target constructor      // move the Target      private function moveTarget( t : TimerEvent )       {         // if Target is at the top or bottom of the stage,          // change its direction         if ( y > 310 )         {            upDown = -1; // change direction to up         } // end if                  else if ( y < 90 )          {            upDown = 1; // change direction to down         } // end else         y += (speed * upDown); // move target      } // end function moveTarget       // set direction of the Target       public function setUpDown( newUpDown : int )      {         upDown = newUpDown;      } // end function setUpDown       // get direction of the Target      public function getUpDown() : int      {         return upDown;      } // end function getUpDown          // set speed of the Target      public function setSpeed ( newSpeed : int )      {         speed = newSpeed;      } // end function setSpeed       // get speed of the Target      public function getSpeed() : int      {         return speed;      } // end function getSpeed      // set the number of times the Target has been hit              public function setHitCounter( newCount : int )       {         hitCounter = newCount;      } // end setHitCounter function      // return the number of times the Target has been hit            public function getHitCounter () : int      {         return hitCounter;      } // end function getHitCounter      // stop moveTargetTimer      public function stopTimers() : void      {         moveTargetTimer.stop();      }   } // end class Target} // end package